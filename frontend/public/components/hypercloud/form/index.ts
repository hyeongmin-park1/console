export const pluralToKind = new Map([
  ['podsecuritypolicies', 'PodSecurityPolicy'],
  ['pods', 'Pod'],
  ['deployments', 'Deployment'],
  ['replicasets', 'ReplicaSet'],
  ['horizontalpodautoscalers', 'HorizontalPodAutoscaler'],
  ['daemonsets', 'DaemonSet'],
  ['statefulsets', 'StatefulSet'],
  ['configmaps', 'ConfigMap'],
  ['secrets', 'Secret'],
  ['jobs', 'Job'],
  ['cronjobs', 'CronJob'],
  ['services', 'Service'],
  ['ingresses', 'Ingress'],
  ['networkpolicies', 'NetworkPolicy'],
  ['storageclasses', 'StorageClass'],
  ['persistentvolumeclaims', 'PersistentVolumeClaim'],
  ['persistentvolumes', 'PersistentVolume'],
  ['namespaces', 'Namespace'],
  ['limitranges', 'LimitRange'],
  ['resourcequotas', 'ResourceQuota'],
  ['nodes', 'Node'],
  ['roles', 'Role'],
  ['rolebindings', 'RoleBinding'],
  ['serviceaccounts', 'ServiceAccount'],
  ['customresourcedefinitions', 'CustomResourceDefinition'],
  ['namespaceclaims', 'NamespaceClaim'],
  ['servicebrokers', 'ServiceBroker'],
  ['serviceclasses', 'ServiceClass'],
  ['serviceplans', 'ServicePlan'],
  ['clusterservicebrokers', 'ClusterServiceBroker'],
  ['clusterserviceclasses', 'ClusterServiceClass'],
  ['clusterserviceplans', 'ClusterServicePlan'],
  ['clustertemplates', 'ClusterTemplate'],
  ['serviceinstances', 'ServiceInstance'],
  ['servicebindings', 'ServiceBinding'],
  ['catalogserviceclaims', 'CatalogServiceClaim'],
  ['templates', 'Template'],
  ['templateinstances', 'TemplateInstance'],
  ['rolebindingclaims', 'RoleBindingClaim'],
  ['resourcequotaclaims', 'ResourceQuotaClaim'],
  ['tasks', 'Task'],
  ['clustertasks', 'ClusterTask'],
  ['taskruns', 'TaskRun'],
  ['pipelines', 'Pipeline'],
  ['pipelineruns', 'PipelineRun'],
  ['approvals', 'Approval'],
  ['pipelineresources', 'PipelineResource'],
  ['integrationconfigs', 'IntegrationConfig'],
  ['hyperclusterresources', 'HyperClusterResource'],
  ['clusterclaims', 'ClusterClaim'],
  ['federatedconfigmaps', 'FederatedConfigMap'],
  ['federateddeployments', 'FederatedDeployment'],
  ['federatedingresses', 'FederatedIngress'],
  ['federatedjobs', 'FederatedJob'],
  ['federatednamespaces', 'FederatedNamespace'],
  ['federatedreplicasets', 'FederatedReplicaSet'],
  ['federatedsecrets', 'FederatedSecret'],
  ['federatedservices', 'FederatedService'],
  ['federatedpods', 'FederatedPod'],
  ['federatedhorizontalpodautoscalers', 'FederatedHorizontalPodAutoscaler'],
  ['federateddaemonsets', 'FederatedDaemonSet'],
  ['federatedstatefulsets', 'FederatedStatefulSet'],
  ['federatedcronjobs', 'FederatedCronJob'],
  ['virtualservices', 'VirtualService'],
  ['destinationrules', 'DestinationRule'],
  ['envoyfilters', 'EnvoyFilter'],
  ['gateways', 'Gateway'],
  ['sidecars', 'Sidecar'],
  ['serviceentries', 'ServiceEntry'],
  ['requestauthentications', 'RequestAuthentication'],
  ['peerauthentications', 'PeerAuthentication'],
  ['authorizationpolicies', 'AuthorizationPolicy'],
  ['datavolumes', 'DataVolume'],
  ['virtualmachines', 'VirtualMachine'],
  ['registries', 'Registry'],
  ['externalregistries', 'ExternalRegistry'],
  ['imagesigners', 'ImageSigner'],
  ['imagesignrequests', 'ImageSignRequest'],
  ['imagescanrequests', 'ImageScanRequest'],
  ['imagereplicates', 'ImageReplicate'],
  ['signerpolicies', 'SignerPolicy'],
  ['notebooks', 'Notebook'],
  ['experiments', 'Experiment'],
  ['trainingjobs', 'TrainingJob'],
  ['tfjobs', 'TFJob'],
  ['pytorchjobs', 'PyTorchJob'],
  ['inferenceservices', 'InferenceService'],
  ['workflowtemplates', 'WorkflowTemplate'],
  ['workflows', 'Workflow'],
  ['tfapplyclaims', 'TFApplyClaim'],
]);

export const isCreateManual = new Set(['Role', 'TemplateInstance', 'Task', 'ClusterTask', 'TaskRun', 'PipelineRun']);

export const isCustomrResource = new Set([
  'NamespaceClaim',
  'ServiceBroker',
  'ServiceClass',
  'ServicePlan',
  'ClusterServiceBroker',
  'ClusterServiceClass',
  'ClusterServicePlan',
  'ClusterTemplate',
  'ServiceInstance',
  'ServiceBinding',
  'CatalogServiceClaim',
  'Template',
  'TemplateInstance',
  'RoleBindingClaim',
  'ResourceQuotaClaim',
  'Task',
  'ClusterTask',
  'TaskRun',
  'Pipeline',
  'PipelineRun',
  'Approval',
  'PipelineResource',
  'IntegrationConfig',
  'HyperClusterResource',
  'ClusterClaim',
  'FederatedConfigMap',
  'FederatedDeployment',
  'FederatedIngress',
  'FederatedJob',
  'FederatedNamespace',
  'FederatedReplicaSet',
  'FederatedSecret',
  'FederatedService',
  'FederatedPod',
  'FederatedHorizontalPodAutoscaler',
  'FederatedDaemonSet',
  'FederatedStatefulSet',
  'FederatedCronJob',
  'VirtualService',
  'DestinationRule',
  'EnvoyFilter',
  'Gateway',
  'Sidecar',
  'ServiceEntry',
  'RequestAuthentication',
  'PeerAuthentication',
  'AuthorizationPolicy',
  'DataVolume',
  'VirtualMachine',
  'Registry',
  'ExternalRegistry',
  'ImageSigner',
  'ImageSignRequest',
  'ImageScanRequest',
  'ImageReplicate',
  'SignerPolicy',
  'Notebook',
  'Experiment',
  'TrainingJob',
  'TFJob',
  'PyTorchJob',
  'InferenceService',
  'WorkflowTemplate',
  'Workflow',
  'TFApplyClaim',
]);
